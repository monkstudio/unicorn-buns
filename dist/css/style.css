/**
* Remove unit from a number so we can math.
*/
/**
  * We use a percentage value when instead of a rem value on the fluid font size
  * so that it plays nice with IE and Safari.
  */
/**
  * Convert line height to percentage for cross browser compatibility.
  */
/**
  * Helper function to get a key value from the base options map.
  */
/**
  * Helper function to convert px to rem for the baseline. This will help keep things fluid.
  */
/**
  * Optional mixin to help create a nice vertical rythm. Search "vertical ryhtm golden ratio".
  */
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
     ========================================================================== */
/**
   * Remove the margin in all browsers.
   */
body {
  margin: 0;
}

/**
   * Render the `main` element consistently in IE.
   */
main {
  display: block;
}

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
     ========================================================================== */
/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
     ========================================================================== */
/**
   * Remove the gray background on active links in IE 10.
   */
a {
  background-color: transparent;
}

/**
   * 1. Remove the bottom border in Chrome 57-
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */
b,
strong {
  font-weight: bolder;
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
   * Add the correct font size in all browsers.
   */
small {
  font-size: 80%;
}

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
     ========================================================================== */
/**
   * Remove the border on images inside links in IE 10.
   */
img {
  border-style: none;
}

/* Forms
     ========================================================================== */
/**
   * 1. Change the font styles in all browsers.
   * 2. Remove the margin in Firefox and Safari.
   */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
   * Correct the inability to style clickable types in iOS and Safari.
   */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
   * Remove the inner border and padding in Firefox.
   */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
   * Restore the focus styles unset by the previous rule.
   */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
   * Correct the padding in Firefox.
   */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
   * 1. Correct the text wrapping in Edge and IE.
   * 2. Correct the color inheritance from `fieldset` elements in IE.
   * 3. Remove the padding so developers are not caught out when they zero out
   *    `fieldset` elements in all browsers.
   */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
   * Add the correct vertical alignment in Chrome, Firefox, and Opera.
   */
progress {
  vertical-align: baseline;
}

/**
   * Remove the default vertical scrollbar in IE 10+.
   */
textarea {
  overflow: auto;
}

/**
   * 1. Add the correct box sizing in IE 10.
   * 2. Remove the padding in IE 10.
   */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
   * Remove the inner padding in Chrome and Safari on macOS.
   */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
     ========================================================================== */
/*
   * Add the correct display in Edge, IE 10+, and Firefox.
   */
details {
  display: block;
}

/*
   * Add the correct display in all browsers.
   */
summary {
  display: list-item;
}

/* Misc
     ========================================================================== */
/**
   * Add the correct display in IE 10+.
   */
template {
  display: none;
}

/**
   * Add the correct display in IE 10.
   */
[hidden] {
  display: none;
}

body,
button,
input,
select,
textarea {
  color: black;
  font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 25.6px;
  font-size: 1.6rem;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: normal;
  margin: 0 0 .8em 0;
}

h1 {
  color: #FFF;
  text-transform: uppercase;
  font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  letter-spacing: .03em;
  margin: 0 0 .3em;
}

p {
  margin-bottom: 1.5em;
  margin-top: 0;
}

dfn,
cite,
em,
i {
  font-style: italic;
}

blockquote {
  margin: 0 1.5em;
}

address {
  margin: 0 0 1.5em;
}

pre {
  background: #E0E0E0;
  font-family: Menlo, Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace;
  margin-bottom: 1.6em;
  max-width: 100%;
  overflow: auto;
  padding: 1.6em;
}

code,
kbd,
tt,
var {
  font-family: Menlo, Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace;
}

abbr,
acronym {
  border-bottom: 1px dotted black;
  cursor: help;
}

mark,
ins {
  background: #E0E0E0;
  text-decoration: none;
  padding: 0 .2em;
}

big {
  font-size: 125%;
}

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

*,
*:before,
*:after {
  /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

body {
  min-height: 100vh;
  background-color: #FFF;
}

blockquote, q {
  quotes: "" "";
  margin: 20px 0 20px 50px;
  border-left: 10px solid #E0E0E0;
  padding: 0 50px;
}

blockquote:before, blockquote:after, q:before, q:after {
  content: "";
}

hr {
  background-color: #121212;
  border: 0;
  height: 1px;
  margin: 30px 0;
}

img {
  height: auto;
  /* Make sure images are scaled correctly. */
  max-width: 100%;
  /* Adhere to container width. */
}

ul,
ol {
  margin-top: 0;
  margin-bottom: 1.5em;
}

ul ul,
ul ol,
ol ul,
ol ol {
  margin-bottom: 0;
}

ul {
  list-style: disc;
}

ol {
  list-style: decimal;
}

li > ul,
li > ol {
  margin-bottom: 0;
  margin-left: 0;
}

dt {
  font-weight: bold;
}

dd {
  margin: 0 1.5em 1.5em;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

.text-nowrap {
  white-space: nowrap;
}

.text-break {
  word-break: break-all;
}

.text-lowercase {
  text-transform: lowercase;
}

.text-uppercase {
  text-transform: uppercase;
}

.text-capitalize {
  text-transform: capitalize;
}

table {
  margin: 1em 0;
  width: 100%;
  border: 1px solid #E0E0E0;
  border-collapse: collapse;
  text-align: left;
}

table td,
table th {
  padding: 10px;
  border: 1px solid #E0E0E0;
}

button,
input[type="button"],
input[type="reset"],
input[type="submit"],
.btn,
.button {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  padding: 10px 30px;
  -webkit-transition: .3s ease all;
  transition: .3s ease all;
  background-color: black;
  color: #FFF;
  display: table;
  margin: 30px auto;
  -webkit-box-shadow: 0 0 0 2px black;
          box-shadow: 0 0 0 2px black;
  border-radius: 20px;
}

button:visited,
input[type="button"]:visited,
input[type="reset"]:visited,
input[type="submit"]:visited,
.btn:visited,
.button:visited {
  background-color: black;
  color: #FFF;
}

button:hover,
input[type="button"]:hover,
input[type="reset"]:hover,
input[type="submit"]:hover,
.btn:hover,
.button:hover {
  -webkit-box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.5);
          box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.5);
  background-color: rgba(0, 0, 0, 0.5);
  border: none;
  -webkit-transition: .3s ease all;
  transition: .3s ease all;
  cursor: pointer;
}

button:focus,
input[type="button"]:focus,
input[type="reset"]:focus,
input[type="submit"]:focus,
.btn:focus,
.button:focus {
  outline: 2px solid transparent;
  -webkit-box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.3);
  outline-offset: 2px;
}

button svg,
input[type="button"] svg,
input[type="reset"] svg,
input[type="submit"] svg,
.btn svg,
.button svg {
  fill: #FFF;
}

input[type="text"],
input[type="email"],
input[type="url"],
input[type="password"],
input[type="search"],
input[type="number"],
input[type="tel"],
input[type="range"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="color"],
textarea {
  color: black;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
  border: 1px solid black;
  border-radius: 0;
  padding: 5px 10px;
  margin: .3em 0;
  background-color: transparent;
}

input[type="text"]:focus,
input[type="email"]:focus,
input[type="url"]:focus,
input[type="password"]:focus,
input[type="search"]:focus,
input[type="number"]:focus,
input[type="tel"]:focus,
input[type="range"]:focus,
input[type="date"]:focus,
input[type="month"]:focus,
input[type="week"]:focus,
input[type="time"]:focus,
input[type="datetime"]:focus,
input[type="datetime-local"]:focus,
input[type="color"]:focus,
textarea:focus {
  outline: 2px solid transparent;
  -webkit-box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.3);
}

input[type="radio"] {
  display: inline-block;
}

select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background: none;
  padding: 5px 10px;
  border: 1px solid black;
  border-radius: 0;
}

select:focus {
  outline: 2px solid transparent;
  -webkit-box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.3);
}

textarea {
  max-height: 200px;
  width: 100%;
}

textarea:focus {
  outline: 2px solid transparent;
  -webkit-box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.3);
}

label {
  margin: .5em 0;
  display: block;
  font-weight: bold;
}

[type=checkbox] {
  position: absolute;
  opacity: 0;
}

[type=checkbox] + span {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

[type=checkbox] + label,
[type=checkbox] + span {
  position: relative;
  cursor: pointer;
  padding: 0;
}

[type=checkbox] + label:before,
[type=checkbox] + span:before {
  content: '';
  margin-right: 10px;
  display: inline-block;
  vertical-align: text-top;
  width: 20px;
  height: 20px;
  border: 1px solid currentColor;
}

[type=checkbox]:focus + label:before,
[type=checkbox]:focus + span:before {
  -webkit-box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.12);
          box-shadow: 0 0 0 3px rgba(0, 0, 0, 0.12);
}

[type=checkbox]:checked + label:before {
  background: #f35429;
}

[type=checkbox]:disabled + label,
[type=checkbox]:disabled + span {
  background-color: white;
  cursor: auto;
}

[type=checkbox]:disabled + label:before,
[type=checkbox]:disabled + span:before {
  -webkit-box-shadow: none;
          box-shadow: none;
  background-color: #E0E0E0;
}

[type=checkbox]:checked + label:after,
[type=checkbox]:checked + span:after {
  content: '';
  position: absolute;
  left: 4px;
  top: 10px;
  background-color: currentColor;
  width: 2px;
  height: 2px;
  -webkit-box-shadow: 2px 0 0 currentColor, 4px 0 0 currentColor, 4px -2px 0 currentColor, 4px -4px 0 currentColor, 4px -6px 0 currentColor, 4px -8px 0 currentColor, 4px -10px 0 currentColor;
          box-shadow: 2px 0 0 currentColor, 4px 0 0 currentColor, 4px -2px 0 currentColor, 4px -4px 0 currentColor, 4px -6px 0 currentColor, 4px -8px 0 currentColor, 4px -10px 0 currentColor;
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}

/*--------------------------------------------------------------
## Links
--------------------------------------------------------------*/
a {
  color: black;
  text-decoration: none;
}

a:visited {
  color: black;
}

a:hover, a:active {
  color: white;
  text-decoration: none;
}

a:focus {
  outline: 2px dotted black;
  text-decoration: none;
}

a:hover, a:active {
  outline: 0;
}

/*--------------------------------------------------------------
## Menus
--------------------------------------------------------------*/
.container {
  max-width: 1600px;
  padding: 0 100px;
  width: 100%;
}

/* Text meant only for screen readers. */
.screen-reader-text {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  -webkit-clip-path: inset(50%);
          clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute !important;
  width: 1px;
  word-wrap: normal !important;
  /* Many screen reader and browser combinations announce broken words as they would appear visually. */
}

.screen-reader-text:focus {
  background-color: white;
  border-radius: 3px;
  -webkit-box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
          box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
  clip: auto !important;
  -webkit-clip-path: none;
          clip-path: none;
  color: black;
  display: block;
  font-weight: bold;
  height: auto;
  left: 5px;
  line-height: normal;
  padding: 15px 23px 14px;
  text-decoration: none;
  top: 5px;
  width: auto;
  z-index: 100000;
  /* Above WP toolbar. */
}

/* Do not show the outline on the skip link target. */
#content[tabindex="-1"]:focus {
  outline: 0;
}

/*--------------------------------------------------------------
# Media
--------------------------------------------------------------*/
/*--------------------------------------------------------------
# Browser Hacks
--------------------------------------------------------------*/

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
