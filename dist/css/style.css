@charset "UTF-8";
/*!
Theme Name: Monk Holding
Theme URI: https://github.com/monkstudio/unicorn-buns
Author: Jaclyn Tan
Author Email: jaclyn@monk.com.au
Author URI: http://monk.com.au
Description: Static HTML template
Version: 1.0.0
License: GNU General Public License v2 or later
License URI: http://www.gnu.org/licenses/gpl-2.0.html
Text Domain: http://www.monk.com.au

  .^====^.
 =( ^--^ )=
  /      \   /~
+( |    | )//


*/
html {
  font-family: sans-serif;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
}

body {
  margin: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden],
template {
  display: none;
}

a {
  background-color: transparent;
}

a:active,
a:hover {
  outline: 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b,
strong {
  font-weight: bold;
}

dfn {
  font-style: italic;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

mark {
  background: #ff0;
  color: #000;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

img {
  border: 0;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 1em 40px;
}

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0;
}

pre {
  overflow: auto;
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}

button {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled],
html input[disabled] {
  cursor: default;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input {
  line-height: normal;
}

input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0;
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
}

optgroup {
  font-weight: bold;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-size: 62.5%;
}

*,
*:before,
*:after {
  /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see http://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
}

body {
  background: #FFF;
}

blockquote, q {
  quotes: "" "";
  margin: 20px 0 20px 50px;
}

blockquote:before, blockquote:after, q:before, q:after {
  content: "";
}

hr {
  background-color: lightgrey;
  border: 0;
  height: 1px;
  margin: 30px 0;
}

img {
  height: auto;
  /* Make sure images are scaled correctly. */
  max-width: 100%;
  /* Adhere to container width. */
}

/*--------------------------------------------------------------
## Table Grid
--------------------------------------------------------------*/
body {
  overflow-x: hidden;
}

.container, .container-fluid {
  max-width: 1400px;
  margin-right: auto;
  margin-left: auto;
  width: 100%;
}

.container-fluid {
  max-width: none;
}

.row, .row-auto {
  display: table;
  width: 100%;
  table-layout: fixed;
  text-align: left;
}

.row-auto {
  margin: 0 -15px;
  width: calc(100% + 30px);
}

@media (max-width: 768px) {
  .row-auto {
    margin: 0;
    width: 100%;
  }
}

.row-auto .col {
  display: inline-block;
  vertical-align: top;
  position: relative;
  padding: 0 15px;
}

@media (max-width: 768px) {
  .row-auto .col {
    display: block;
  }
}

.row-padded {
  margin: 0 -30px;
}

@media (max-width: 768px) {
  .row-padded {
    margin: 0;
  }
}

.row-padded .row, .row-padded .row-auto {
  border-spacing: 30px 0;
}

@media (max-width: 768px) {
  .row-padded .row, .row-padded .row-auto {
    border-spacing: 0;
  }
}

.col {
  display: table-cell;
  vertical-align: top;
}

@media (max-width: 768px) {
  .col {
    display: block;
  }
}

.col-1 {
  width: 100%;
}

@media (min-width: 768px) {
  .col-1 {
    width: 8.33333%;
  }
}

.col-2 {
  width: 100%;
}

@media (min-width: 768px) {
  .col-2 {
    width: 16.66667%;
  }
}

.col-3 {
  width: 100%;
}

@media (min-width: 768px) {
  .col-3 {
    width: 25%;
  }
}

.col-4 {
  width: 100%;
}

@media (min-width: 768px) {
  .col-4 {
    width: 33.33333%;
  }
}

.col-5 {
  width: 100%;
}

@media (min-width: 768px) {
  .col-5 {
    width: 41.66667%;
  }
}

.col-6 {
  width: 100%;
}

@media (min-width: 768px) {
  .col-6 {
    width: 50%;
  }
}

.col-7 {
  width: 100%;
}

@media (min-width: 768px) {
  .col-7 {
    width: 58.33333%;
  }
}

.col-8 {
  width: 100%;
}

@media (min-width: 768px) {
  .col-8 {
    width: 66.66667%;
  }
}

.col-9 {
  width: 100%;
}

@media (min-width: 768px) {
  .col-9 {
    width: 75%;
  }
}

.col-10 {
  width: 100%;
}

@media (min-width: 768px) {
  .col-10 {
    width: 83.33333%;
  }
}

.col-11 {
  width: 100%;
}

@media (min-width: 768px) {
  .col-11 {
    width: 91.66667%;
  }
}

.col-12 {
  width: 100%;
}

@media (min-width: 768px) {
  .col-12 {
    width: 100%;
  }
}

.col.align-top {
  vertical-align: top;
}

.col.align-middle {
  vertical-align: middle;
}

.col.align-bottom {
  vertical-align: bottom;
}

.row-reverse {
  direction: rtl;
}

.row-reverse .col {
  direction: ltr;
}

.padded {
  padding: 15px;
}

/* 

Usage

==================================
With gutters
==================================

<div class="container">   
    <div class="row-padded">
        <div class="row">
            <div class="col">Column</div>
            <div class="col">Column</div>
        </div>
    </div>
</div>

==================================
No gutters
==================================

<div class="container">  
    <div class="grid">
        <div class="col">Column</div>
        <div class="col">Column</div>
        <div class="col">Column</div>
    </div>
</div>

==================================
Columns with no automatic widths
==================================
Normally, table cells fills the entire width of its parent automatically. Using .row-auto instead of .row ensures the width of each column stays fixed relative to the container width.
==================================

<div class="container">  
    <div class="row-auto">
        <div class="col-5">Column</div>
        <div class="col-5">Column</div>
    </div>
</div>

*/
@font-face {
  font-family: 'fontello';
  src: url("fonts/fontello/fontello.eot?30005759");
  src: url("fonts/fontello/fontello.eot?30005759#iefix") format("embedded-opentype"), url("fonts/fontello/fontello.woff2?30005759") format("woff2"), url("fonts/fontello/fontello.woff?30005759") format("woff"), url("fonts/fontello/fontello.ttf?30005759") format("truetype"), url("fonts/fontello/fontello.svg?30005759#fontello") format("svg");
  font-weight: normal;
  font-style: normal;
}

/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */
/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */
/*
@media screen and (-webkit-min-device-pixel-ratio:0) {
  @font-face {
    font-family: 'fontello';
    src: url('../font/fontello.svg?30005759#fontello') format('svg');
  }
}
*/
.icon-mail-circled:before {
  content: '\e800';
}

/* '' */
.icon-mail:before {
  content: '\e801';
}

/* '' */
.icon-print:before {
  content: '\e802';
}

/* '' */
.icon-globe:before {
  content: '\e803';
}

/* '' */
.icon-link-2:before {
  content: '\e804';
}

/* '' */
.icon-export:before {
  content: '\e805';
}

/* '' */
.icon-phone:before {
  content: '\e806';
}

/* '' */
.icon-link-1:before {
  content: '\e807';
}

/* '' */
.icon-picture:before {
  content: '\e808';
}

/* '' */
.icon-play-1:before {
  content: '\e809';
}

/* '' */
.icon-menu:before {
  content: '\e80a';
}

/* '' */
.icon-list:before {
  content: '\e80b';
}

/* '' */
.icon-th-thumb:before {
  content: '\f00a';
}

/* '' */
.icon-th-thumb-empty:before {
  content: '\f00b';
}

/* '' */
.icon-facebook-circled:before {
  content: '\f051';
}

/* '' */
.icon-twitter-circled:before {
  content: '\f057';
}

/* '' */
.icon-link-ext:before {
  content: '\f08e';
}

/* '' */
.icon-twitter:before {
  content: '\f099';
}

/* '' */
.icon-facebook:before {
  content: '\f09a';
}

/* '' */
.icon-rss:before {
  content: '\f09e';
}

/* '' */
.icon-gplus-squared:before {
  content: '\f0d4';
}

/* '' */
.icon-gplus:before {
  content: '\f0d5';
}

/* '' */
.icon-linkedin:before {
  content: '\f0e1';
}

/* '' */
.icon-rss-squared:before {
  content: '\f143';
}

/* '' */
.icon-youtube-play:before {
  content: '\f16a';
}

/* '' */
.icon-instagram:before {
  content: '\f16d';
}

/* '' */
.icon-mail-squared:before {
  content: '\f199';
}

/* '' */
.icon-google:before {
  content: '\f1a0';
}

/* '' */
.icon-fax:before {
  content: '\f1ac';
}

/* '' */
.icon-snapchat:before {
  content: '\f2ab';
}

/* '' */
.icon-snapchat-ghost:before {
  content: '\f2ac';
}

/* '' */
.icon-snapchat-square:before {
  content: '\f2ad';
}

/* '' */
.icon-google-plus-circle:before {
  content: '\f2b3';
}

/* '' */
.icon-twitter-squared:before {
  content: '\f304';
}

/* '' */
.icon-facebook-squared:before {
  content: '\f308';
}

/* '' */
.icon-linkedin-squared:before {
  content: '\f30c';
}

/* '' */
.icon-linkedin-circled:before {
  content: '\f319';
}

/* '' */
[class^="icon-"]:before, [class*=" icon-"]:before {
  font-family: "fontello";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
  /* Font smoothing. That was taken from TWBS */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
}

body,
button,
input,
select,
textarea {
  color: black;
  font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 25.6px;
  font-size: 1.6rem;
  line-height: 1.3;
}

a {
  color: black;
  text-decoration: none;
}

a:visited {
  color: white;
}

a:hover, a:active {
  color: white;
  text-decoration: none;
}

a:focus {
  outline: thin dotted;
  text-decoration: none;
}

a:hover, a:active {
  outline: 0;
}

.logo {
  width: 200px;
  margin: 20px auto;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
